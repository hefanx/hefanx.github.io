<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>把本地文件推送到Gitee远程仓库教程</title>
      <link href="/2023/03/08/%E6%8A%8A%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E6%8E%A8%E9%80%81%E5%88%B0Gitee%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E6%95%99%E7%A8%8B/"/>
      <url>/2023/03/08/%E6%8A%8A%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E6%8E%A8%E9%80%81%E5%88%B0Gitee%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<ol><li>打开Gitee官网——点击右上角新建仓库——填写仓库名称，路径和仓库介绍——设置模板，勾选Readme文件——点击创建</li><li>点击克隆&#x2F;下载——选择HTTPS进行复制（复制目标仓库地址）</li><li>在D盘创建一个upload文件夹——在该文件夹内右键Git Bash Here</li><li>初始化一个git仓库，执行命令：git init</li><li>连接gitee远程仓库，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin https://... /仓库名.git     #https://改成刚复制的目标仓库地址</span><br></pre></td></tr></table></figure><ol start="6"><li>将gitee上的仓库pull到本地文件夹，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://... /仓库名.git     #https://改成刚复制的目标仓库地址</span><br></pre></td></tr></table></figure><p>如果是第一次连接gitee仓库，则会让你输入gitee的用户名和密码。</p><ol start="7"><li>打开刚pull下来的文件夹，将想要上传的文件复制粘贴到刚才拉取下来的文件里</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls     #查看文件名称</span><br><span class="line">cd 文件夹名称     #进入到刚pull下来的文件夹中</span><br></pre></td></tr></table></figure><ol start="7"><li>将全部文件提交到缓存区，执行命令：git add .</li><li>将文件提交到本地仓库，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git commit -m &#x27;第一次提交gitee代码&#x27;     #单引号内的内容为提交时的备注信息</span><br></pre></td></tr></table></figure><ol start="10"><li>将本地文件推动到gitee远程仓库，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push origin master     #master是默认分支名，这里可以根据自己需要进行修改</span><br></pre></td></tr></table></figure><ol start="11"><li>打开gitee，查看仓库，发现文件上传成功了。</li></ol><p>补充：win11看不到git文件是因为开启了隐藏项目的功能，关闭方法：点击查看——显示——把隐藏的项目前的勾打上就可以，这样就可以看到git文件了。</p><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/gitee%20logo.jpeg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> gitee教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令整理</title>
      <link href="/2023/03/07/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/"/>
      <url>/2023/03/07/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="关机和重启"><a href="#关机和重启" class="headerlink" title="关机和重启"></a>关机和重启</h2><p> <strong>关机</strong></p><ul><li>shutdown -h now     #立即关机</li><li>shutdown -h 5     #五分钟后关机</li><li>poweroff     #立即关机</li></ul><p><strong>重启</strong></p><ul><li>shotdown -r now     #立即重启</li><li>shutdown -r 5     #五分钟后重启</li><li>reboot     #立即重启</li></ul><h2 id="复制和粘贴"><a href="#复制和粘贴" class="headerlink" title="复制和粘贴"></a>复制和粘贴</h2><ul><li>复制快捷键：Ctrl+Insert</li><li>粘贴快捷键：Shift+Insert</li></ul><h2 id="目录操作命令"><a href="#目录操作命令" class="headerlink" title="目录操作命令"></a>目录操作命令</h2><h3 id="目录查看【ls】"><a href="#目录查看【ls】" class="headerlink" title="目录查看【ls】"></a>目录查看【ls】</h3><ol><li>ls     #列出当前目录下的所有子目录和文件</li></ol><ul><li>ls -a     #列出当前目录下的所有子目录和文件（包括隐藏的文件）</li><li>ls -l     #列出当前目录下的所有子目录和文件（列表查看，显示更多信息）</li><li>ls &#x2F;dir     #列出指定目录下的所有子目录和文件  如：ls &#x2F;usr</li></ul><ol start="2"><li>pwd     #显示当前工作目录的绝对路径</li><li>clear     #清除屏幕（清屏）</li><li>sudo -i     #切换为超级管理员，获得更高的root权限</li></ol><h3 id="目录切换【cd】"><a href="#目录切换【cd】" class="headerlink" title="目录切换【cd】"></a>目录切换【cd】</h3><ol start="5"><li>cd AAA     #进入到当前目录下的AAA目录</li></ol><ul><li>cd &#x2F;     #切换到根目录</li><li>cd ~     #切换到home目录</li><li>cd ..     #返回上一级目录</li><li>cd ..&#x2F;..     #返回上两级目录</li><li>cd -     #切换到上次返回的目录</li></ul><h3 id="创建目录【mkdir】"><a href="#创建目录【mkdir】" class="headerlink" title="创建目录【mkdir】"></a>创建目录【mkdir】</h3><ol start="6"><li>mkdir AAA     #在当前目录下创建一个名为AAA的目录</li></ol><ul><li>mkdir &#x2F;usr&#x2F;AAA     #在指定目录下创建一个名为AAA的目录</li></ul><h3 id="删除目录和文件【rm】"><a href="#删除目录和文件【rm】" class="headerlink" title="删除目录和文件【rm】"></a>删除目录和文件【rm】</h3><p><strong>删除文件</strong></p><ol start="7"><li>rm XXX文件     #删除当前目录下的XXX文件</li></ol><ul><li>rm -f XXX文件     #删除当前目录下的XXX文件（不询问）</li></ul><p><strong>删除目录</strong></p><ul><li><p>rm -r AAA     #递归删除当前目录下的AAA目录</p></li><li><p>rm -rf AAA     #递归删除当前目录下的AAA目录（不询问）</p></li><li><p>rm -rf *     #将当前目录下的所有目录和文件全部删除（慎用）</p></li></ul><p>注意：rm不仅可以删除目录，也可以删除其他文件或压缩包，为了方便大家的记忆，无论删除任何目录或文件，都直接使用 rm -rf 目录&#x2F;文件&#x2F;压缩包。</p><h3 id="目录修改【mv和cp】"><a href="#目录修改【mv和cp】" class="headerlink" title="目录修改【mv和cp】"></a>目录修改【mv和cp】</h3><p><strong>重命名目录</strong></p><ol start="8"><li>mv 当前目录名称 新目录名称</li></ol><p>例如：mv AAA BBB     #将目录AAA重命名为BBB</p><p> 注意：mv的语法不仅可以对目录进行重命名，也可以对各种文件，压缩包等进行重命名操作。</p><p><strong>剪切目录</strong></p><ul><li>mv 当前目录位置 目录的新位置</li></ul><p>例如：mv &#x2F;usr&#x2F;AAA &#x2F;root     #将&#x2F;usr下的AAA目录剪切到&#x2F;root目录下</p><p>注意：mv语法不仅可以对目录进行剪切操作，也可以对各种文件，压缩包等进行剪切操作。</p><p><strong>拷贝目录</strong></p><ul><li>cp -r 当前目录位置 目录的新位置</li></ul><p>例如：cp -r usr&#x2F;BBB &#x2F;root     #将&#x2F;usr下的BBB目录复制到&#x2F;root目录下  （-r代表递归）</p><p>注意：cp命令不仅可以拷贝目录还可以拷贝文件，压缩包等，拷贝文件和压缩包时不用写 -r 递归</p><h3 id="查找目录【find】"><a href="#查找目录【find】" class="headerlink" title="查找目录【find】"></a>查找目录【find】</h3><ol start="9"><li>find 目录 参数 文件名称</li></ol><p>例如：find &#x2F;usr -name ‘A*’     #查找&#x2F;usr目录下所有以A开头的目录或文件</p><p>例如：find &#x2F;usr -name ‘*.txt’     #查找&#x2F;usr目录下所有以.txt结尾的文件</p><h2 id="文件操作命令"><a href="#文件操作命令" class="headerlink" title="文件操作命令"></a>文件操作命令</h2><h3 id="新建文件【touch】"><a href="#新建文件【touch】" class="headerlink" title="新建文件【touch】"></a>新建文件【touch】</h3><ol><li>touch 文件名</li></ol><p>例如：touch AAA.txt     #在当前目录创建一个名为AAA.txt的文件</p><h3 id="删除文件【rm】"><a href="#删除文件【rm】" class="headerlink" title="删除文件【rm】"></a>删除文件【rm】</h3><ol start="2"><li>rm -rf 文件名</li></ol><p>例如：rm -rf BBB.txt     #在当前目录删除一个名为BBB.txt的文件</p><h3 id="修改文件【vi或vim】"><a href="#修改文件【vi或vim】" class="headerlink" title="修改文件【vi或vim】"></a>修改文件【vi或vim】</h3><p>vi编辑器的3种模式：分别是命令模式（command mode）、插入模式（Insert mode）和底行模式（last line mode）。</p><h3 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h3><ol start="3"><li>cat 文件名</li></ol><p>例如：cat AAA.txt     #查看当前目录下名为AAA.txt的文件内容，一次性显示全部内容</p><ol start="4"><li>more 文件名</li></ol><p>例如：more AAA.txt     #查看当前目录下名为AAA.txt的文件内容，按百分比显示部分内容，按回车键显示下一行内容，按空格键显示下一页内容，按q建退出查看。</p><ol start="5"><li>less 文件名</li></ol><p>例如：less AAA.txt     #查看当前目录下名为AAA.txt的文件内容，可以按pg up和pg dn进行向上翻页和向下翻页查看内容，也可以通过鼠标滚动查看内容，按q建退出查看。</p><ol start="6"><li>head 文件名</li></ol><p>例如：head -n 10 AAA.txt     #查看当前目录下名为AAA.txt的文件内容，head表示查看前10行内容。</p><p>例如：tail -n 10 AAA.txt     #查看当前目录下名为AAA.txt的文件内容，tail表示查看后10行内容。</p><h3 id="权限修改"><a href="#权限修改" class="headerlink" title="权限修改"></a>权限修改</h3><p>rwx：r代表可读，w代表可写，x代表该文件是一个可执行文件，如果rwx任意位置变为 - 则代表不可读或不可写或不可执行文件。</p><h2 id="压缩和解压缩【-tar-gz】"><a href="#压缩和解压缩【-tar-gz】" class="headerlink" title="压缩和解压缩【.tar.gz】"></a>压缩和解压缩【.tar.gz】</h2><p>Linux中的打包文件一般是以.tar结尾的，压缩文件一般是以.gz结尾的。<br>而一般情况下打包和压缩是一起进行的，打包并压缩后的文件后缀名一般是以.tar.gz结尾的。</p><p>对命令的解析，其中：</p><p>z：调用gzip压缩命令进行压缩</p><p>c：打包文件</p><p>v：显示运行过程</p><p>f：指定文件名</p><p>x：代表解压</p><p><strong>压缩</strong></p><ol><li>tar -cvf XXX.tar AAA.txt BBB.txt</li></ol><p>注释：#将当前目录下的AAA.txt和BBB.txt文件打包到一个名为XXX.tar的压缩包里</p><ol start="2"><li>tar -zcvf XXX.tar.gz AAA.txt BBB.txt</li></ol><p>注释：#将当前目录下的AAA.txt和BBB.txt文件打包到一个名为XXX.tar.gz的压缩包里</p><p><strong>解压</strong></p><ol start="3"><li>tar -xvf XXX.tar</li></ol><p>注释：#将XXX.tar压缩包解压到当前目录下</p><ul><li>tar -xvf XXX.tar -C usr&#x2F;test</li></ul><p>注释：#将XXX.tar压缩包解压到&#x2F;usr&#x2F;test目录下</p><ol start="4"><li>tar -zxvf XXX.tar.gz</li></ol><p>注释：#将XXX.tar.gz压缩包解压到当前目录下</p><ul><li>tar -zxvf XXX.tar.gz -C usr&#x2F;test</li></ul><p>注释：#将XXX.tar.gz压缩包解压到&#x2F;usr&#x2F;test目录下</p><h3 id="zip压缩和解压【-zip】"><a href="#zip压缩和解压【-zip】" class="headerlink" title="zip压缩和解压【.zip】"></a>zip压缩和解压【.zip】</h3><p><strong>zip压缩</strong></p><ol start="5"><li>zip -r XXX.zip AAA.txt BBB.txt</li></ol><p>注释：#将当前目录下的AAA.txt和BBB.txt文件打包到一个名为XXX.zip的压缩包里</p><p><strong>zip解压</strong></p><ol start="6"><li>unzip XXX.zip</li></ol><p>解析：将XXX.zip压缩包解压到当前目录下</p><ul><li>unzip -d &#x2F;usr&#x2F;test XXX.zip</li></ul><p>注释：#将XXX.zip压缩包解压到&#x2F;usr&#x2F;test目录下</p><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><h4 id="查看进程数【ps-df】"><a href="#查看进程数【ps-df】" class="headerlink" title="查看进程数【ps -df】"></a>查看进程数【ps -df】</h4><ol><li>ps -ef     #查看所有正在运行的进程</li></ol><h4 id="结束进程【kill】"><a href="#结束进程【kill】" class="headerlink" title="结束进程【kill】"></a>结束进程【kill】</h4><ol start="2"><li>kill 进程编号     #结束进程</li></ol><ul><li>kill -KILL 进程编号     #强制结束进程</li></ul><h4 id="查看执行过的命令【history】"><a href="#查看执行过的命令【history】" class="headerlink" title="查看执行过的命令【history】"></a>查看执行过的命令【history】</h4><ol start="3"><li>history     #查看执行过的命令</li></ol><h4 id="查看时间【date】"><a href="#查看时间【date】" class="headerlink" title="查看时间【date】"></a>查看时间【date】</h4><ol start="4"><li>date     #查看系统当前时间</li></ol><h5 id="查看磁盘空间【df-h】"><a href="#查看磁盘空间【df-h】" class="headerlink" title="查看磁盘空间【df -h】"></a>查看磁盘空间【df -h】</h5><ol start="5"><li><p>df -h     #查看当前系统磁盘使用情况统计</p></li><li><p>whoami     #显示当前登录的用户名称</p></li><li><p>passwd     #修改服务器登录密码</p></li></ol><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/Linux%E7%B3%BB%E7%BB%9F.jpeg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hugo搭建webstack导航网站教程【GitHub pages】</title>
      <link href="/2023/03/05/Hugo%E6%90%AD%E5%BB%BAWebstack%E5%AF%BC%E8%88%AA%E7%BD%91%E7%AB%99%E6%95%99%E7%A8%8B%E3%80%90GitHub%20pages%E3%80%91/"/>
      <url>/2023/03/05/Hugo%E6%90%AD%E5%BB%BAWebstack%E5%AF%BC%E8%88%AA%E7%BD%91%E7%AB%99%E6%95%99%E7%A8%8B%E3%80%90GitHub%20pages%E3%80%91/</url>
      
        <content type="html"><![CDATA[<h2 id="安装Hugo博客框架"><a href="#安装Hugo博客框架" class="headerlink" title="安装Hugo博客框架"></a>安装Hugo博客框架</h2><ol><li>首先需要安装<a href="https://git-scm.com/">git工具</a>，很简单按提示进行下一步操作，默认安装就可以。其次需要拥有一个GitHub账号，没有的请自行注册。</li><li>下载hugo博客框架，前往<a href="https://github.com/gohugoio/hugo">hugo GitHub仓库</a>下载就可以。我这里下载的是windows-amd64.zip，根据自己的系统自行下载。</li><li>在D盘新建一个Hugo文件，在其Hugo文件下面在创建一个bin文件夹，将下载的hugo windows-amd64.zip压缩包解压到bin文件夹下。</li><li>在Windows控制面板添加一个path环境变量</li></ol><p>打开控制面板——搜索高级——查看高级系统设置——环境变量——用户变量——双击Path——新建——把hugo安装包的路径复制粘贴过来（D:\Hugo\bin）——点击确定保存。注：系统变量添加Path的方法也是一样的。</p><ol start="5"><li>在hugo文件夹下右键Git Bash Here，执行查看hugo版本的命令：hugo version ，可以看到版本号说明安装成功了。</li></ol><h2 id="搭建Hugo本地博客"><a href="#搭建Hugo本地博客" class="headerlink" title="搭建Hugo本地博客"></a>搭建Hugo本地博客</h2><ol start="6"><li>用hugo创建一个博客，在Hugo文件夹下执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hugo new site myblog</span><br></pre></td></tr></table></figure><p>现在可以前往myblog文件夹下查看生成的文档和内容。</p><ol start="7"><li>前往<a href="https://github.com/shenweiyan/WebStack-Hugo">webstack-hugo仓库</a>下载hugo主题，下载好后把主题压缩包进行解压，然后把主题复制到themes文件夹下面。打开myblog——themes——webstack-hugo——exampleSite（把该文件夹下面的全部文件复制粘贴到myblog根目录下）。</li><li>在本地启动博客网站，<strong>在myblog根目录</strong>下执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hugo server -t webstack-hugo --buildDrafts     #webstack-hugo是主题的名字</span><br></pre></td></tr></table></figure><p>在浏览器打开生成的本地博客地址：<a href="http://localhost:1313/">http://localhost:1313</a> ，能正常的打开的话就可以开始准备部署到GitHub上了。</p><h2 id="部署到GitHub仓库"><a href="#部署到GitHub仓库" class="headerlink" title="部署到GitHub仓库"></a>部署到GitHub仓库</h2><ol start="9"><li>打开GitHub，新建一个GitHub仓库，注意仓库名称必须是自己的GitHub用户名.github.io 的形式，例如：liming.github.io</li><li>在docs文件夹下生成静态部署文件，请<strong>在myblog根目录</strong>下执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hugo --theme=webstack-hugo --baseUrl=&quot;https://tandix.github.io/&quot; --buildDrafts     #tandix.github.io是自己的仓库名</span><br></pre></td></tr></table></figure><ol start="11"><li>新版的webstack hugo主题会在docs文件夹下生成静态文件，这就是我们需要上传到GitHub仓库的上的文档和内容，注：旧版本是在public文件夹下生成的。</li><li>在默认浏览器登录自己的GitHub账号，然后再下载GitHub desktop软件，在GitHub desktop上也登录自己的GitHub账号。将刚才创建的liming.github.io仓库拉取（pull）到本地，然后把docs文件夹下的全部文件复制到liming.github.io文件夹下。打开GitHub desktop软件，然后我们会在Changes下看到刚才复制粘贴过来的全部内容。</li><li>在Summary里填写本次更新的备注信息（可以随便填写），然后点击Commit to main更新到本地仓库，然后再点击Push origin推送到GitHub远程仓库。现在可以打开网页端的GitHub仓库查看刚才上传的代码文件了，在浏览器打开liming.github.io就能访问刚搭建的导航网站。</li></ol><p>注，如果你有两个GitHub账号，在上传代码的时候记得先把不使用的GitHub退出一下，如果还不行则前往Windows的控制面板——凭据管理——Windows凭据——删除或修改GitHub的用户名和密码，然后再到浏览器和GitHub desktop上登录GitHub账号。</p><p><strong>扩展补充：</strong></p><p>用git工具上传代码到GitHub仓库的方法</p><ol start="11"><li>注意这是<strong>在docs文件夹</strong>下初始化一个git仓库，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>12.将代码提交到缓存区，执行命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>13.将缓存区代码提交到本地仓库，执行命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git commit -m ‘我的hugo博客第一次提交’</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/hugo-logo.jpeg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> hugo博客 </tag>
            
            <tag> 导航网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>可道云kodcloud搭建私人网盘教程【宝塔面板】</title>
      <link href="/2023/03/04/%E5%8F%AF%E9%81%93%E4%BA%91kodcloud%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E7%BD%91%E7%9B%98%E6%95%99%E7%A8%8B%E3%80%90%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E3%80%91/"/>
      <url>/2023/03/04/%E5%8F%AF%E9%81%93%E4%BA%91kodcloud%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E7%BD%91%E7%9B%98%E6%95%99%E7%A8%8B%E3%80%90%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E3%80%91/</url>
      
        <content type="html"><![CDATA[<ol><li>首先需要准备一台服务器，我这里使用的是腾讯轻量云，安装的系统镜像是Debian 11，然后用ssh工具连接服务器，我这里使用的ssh工具是Windterm。</li><li>其次服务器上需要安装宝塔面板，宝塔面板安装教程请参考下面这篇文章：</li></ol><p><a href="https://blog.hefan64.tk/2023/02/28/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%9B%BD%E9%99%85%E7%89%88aapanel%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/">宝塔面板国际版aapanel安装教程</a></p><ol start="3"><li>在cloudfare上解析一个二级域名，然后按Win+R，执行cmd，在命令提示符面板里ping一下刚才解析的二级域名，如果可以ping通说明域名解析好了。</li></ol><h2 id="宝塔面板添加网站"><a href="#宝塔面板添加网站" class="headerlink" title="宝塔面板添加网站"></a>宝塔面板添加网站</h2><ol start="4"><li>打开宝塔面板——网站——添加站点——填写站点配置信息如下：</li></ol><ul><li>域名：填写刚才解析的二级域名</li><li>数据库：选择MySQL，数据库账号密码选择默认就可以</li><li>PHP版本：选择PHP-74</li><li>记得先把数据库的账号和密码复制保存到记事本上，后面需要用到。</li></ul><ol start="5"><li>完成上述配置信息后点击提交，点击网站——点击刚添加的二级域名——域名管理——再次点击刚添加的二级域名——打开后如果显示“恭喜，站点创建成功”，就可以给站点配置SSL证书了。</li><li>点击网站——点击刚添加的二级域名——SSL——Let’s Encrypt——选中刚添加的二级域名——点击申请，然后宝塔面板就会自动帮我们申请SSL证书——保存——开启强制HTTPS。</li><li>点击软件商店——搜索Redis——下载安装Redis——应用分类：已安装——点击PHP-7.4——安装扩展——安装Redis扩展。</li></ol><h2 id="安装可道云网盘"><a href="#安装可道云网盘" class="headerlink" title="安装可道云网盘"></a>安装可道云网盘</h2><ol start="8"><li>打开<a href="https://kodcloud.com/">可道云官网</a>，点击下载，选择下载kodbox 服务器端。打开宝塔面板——点击网站——根目录——删除根目录下的全部文件——上传刚才下载的可道云压缩包——右键解压可道云压缩包——删除可道云压缩包。</li><li>点击网站——点击刚添加的二级域名——域名管理——再次点击刚添加的二级域名——来到可道云的系统安装页面——环境监测界面提示我们需要开启shell_exec、exec函数。</li><li>点击软件商店——应用分类：已安装——点击PHP-7.4——禁用函数——点击shell_exec后面的删除（相当于解禁函数）——再点击exec后面的删除（相当于解禁函数）——保存——点击左上角的服务——重启PHP-7.4。</li><li>切换回到可道云的系统安装页面——刷新一下网页就可以了——点击下一步——填写数据库配置信息如下：</li></ol><ul><li>数据库类型：MySQL</li><li>服务器：127.0.0.1 （保持默认就可以）</li><li>用户名：复制粘贴刚才保存的数据库账号</li><li>密码：复制粘贴刚才保存的数据库密码</li><li>数据库：复制粘贴刚才保存的数据库账号</li><li>存储引擎：InnoBD （保证默认就可以）</li><li>系统缓存类型：Redis</li></ul><ol start="12"><li>完成上述配置信息后点击确定，自行设置可道云的账号和密码，点击确定，然后跳转到登录页面输入可道云的账号和密码就可以登录了，至此可道云网盘搭建就完成了。</li></ol><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/%E5%8F%AF%E9%81%93%E4%BA%91.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网盘搭建 </tag>
            
            <tag> 可道云kodcloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cloudreve搭建个人网盘教程【宝塔面板】</title>
      <link href="/2023/03/02/Cloudreve%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98%E6%95%99%E7%A8%8B%E3%80%90%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E3%80%91/"/>
      <url>/2023/03/02/Cloudreve%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98%E6%95%99%E7%A8%8B%E3%80%90%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E3%80%91/</url>
      
        <content type="html"><![CDATA[<ol><li>首先需要准备一台服务器，我这里使用的是腾讯轻量云，安装的系统镜像是Debian 11，然后用ssh工具连接服务器，我这里使用的ssh工具是Windterm。</li><li>其次服务器上需要安装宝塔面板，宝塔面板安装教程请参考下面这篇文章：</li></ol><p><a href="https://blog.hefan64.tk/2023/02/28/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%9B%BD%E9%99%85%E7%89%88aapanel%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/">宝塔面板国际版aapanel安装教程</a></p><ol start="3"><li>在cloudfare上解析一个二级域名，然后按Win+R，执行cmd，在命令提示符面板里ping一下刚才解析的二级域名，如果可以ping通说明域名解析好了。</li></ol><h2 id="宝塔面板添加网站"><a href="#宝塔面板添加网站" class="headerlink" title="宝塔面板添加网站"></a>宝塔面板添加网站</h2><ol start="4"><li>打开宝塔面板——网站——添加站点——填写站点配置信息如下：</li></ol><ul><li>域名：填写刚才解析的二级域名</li><li>数据库：不创建</li><li>PHP版本：PHP-74（或者纯静态也可以）</li></ul><ol start="5"><li>完成上述配置信息后点击提交，点击网站——点击刚添加的二级域名——域名管理——再次点击刚添加的二级域名——打开后如果显示“恭喜，站点创建成功”，就可以给站点配置SSL证书了。</li><li>点击网站——点击刚添加的二级域名——SSL——Let’s Encrypt——选中刚添加的二级域名——点击申请，然后宝塔面板就会自动帮我们申请SSL证书——保存——开启强制HTTPS</li></ol><h2 id="安装Cloudreve"><a href="#安装Cloudreve" class="headerlink" title="安装Cloudreve"></a>安装Cloudreve</h2><ol start="7"><li>打开刚才添加网站的根目录，在ssh工具中执行下面这条命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /www/wwwroot/cloudreve.hefan64.tk</span><br></pre></td></tr></table></figure><ol start="8"><li>在网站根目录下载安装cloudreve，在ssh工具中执行下面这条命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/cloudreve/Cloudreve/releases/download/3.7.1/cloudreve_3.7.1_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><ol start="9"><li>在根目录下新建一个cloudreve文件，在ssh工具中执行下面这条命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir cloudreve</span><br></pre></td></tr></table></figure><ol start="10"><li>把cloudreve压缩包解压到cloudreve文件夹里，在ssh工具中执行下面这条命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf cloudreve_3.7.1_linux_amd64.tar.gz -C cloudreve</span><br></pre></td></tr></table></figure><ol start="11"><li>进入到cloudreve文件里，在ssh工具中执行下面这条命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd cloudreve </span><br></pre></td></tr></table></figure><ol start="12"><li>赋予cloudreve可执行权限，在ssh工具中执行下面这条命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod +x ./cloudreve</span><br></pre></td></tr></table></figure><p>13.启动cloudreve</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./cloudreve</span><br></pre></td></tr></table></figure><ol start="14"><li>启动成功会得到cloudreve的用户名（Admin user name）和登录秘密（Admin password），以及cloudreve的登录端口号，可以通过服务器IP:端口号的形式，在浏览器里打开cloudreve。</li></ol><h2 id="给Cloudreve进行反向代理"><a href="#给Cloudreve进行反向代理" class="headerlink" title="给Cloudreve进行反向代理"></a>给Cloudreve进行反向代理</h2><ol start="15"><li>打开宝塔面板——网站——点击刚才添加的二级域名——反向代理——添加反向代理，填写反向代理配置信息如下：</li></ol><ul><li>代理名称：cloudreve （可以自定义）</li><li>目标URL：<a href="http://43.134.16.15:5212/">http://43.134.16.15:5212</a> （这里填的是cloudreve的访问地址）</li></ul><ol start="16"><li>完成上述配置信息后点击提交，可以通过下面两步检验反向代理是否成功</li></ol><ul><li>点击反向代理目标URL，查看是否可以正常打开</li><li>点击域名管理——再点击刚才添加的二级域名，查看是否可以正常打开</li></ul><ol start="17"><li>至此宝塔面板搭建cloudreve私人网盘就完成了，想要深入学习请移步至cloudreve的GitHub项目仓库：<a href="https://github.com/cloudreve/Cloudreve">https://github.com/cloudreve/Cloudreve</a></li></ol><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/Cloudreve%E7%BD%91%E7%9B%98.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Cloudreve </tag>
            
            <tag> 网盘搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Alist网盘挂载工具搭建教程【宝塔面板】</title>
      <link href="/2023/03/01/Alist%E7%BD%91%E7%9B%98%E6%8C%82%E8%BD%BD%E5%B7%A5%E5%85%B7%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%E3%80%90%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E3%80%91/"/>
      <url>/2023/03/01/Alist%E7%BD%91%E7%9B%98%E6%8C%82%E8%BD%BD%E5%B7%A5%E5%85%B7%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%E3%80%90%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E3%80%91/</url>
      
        <content type="html"><![CDATA[<ol><li>首先需要准备一台服务器，我这里使用的是腾讯轻量云，安装的系统镜像是Debian 11，然后用ssh工具连接服务器，我这里使用的ssh工具是Windterm。</li><li>其次服务器上需要安装宝塔面板，宝塔面板安装教程请参考下面这篇文章：</li></ol><p><a href="https://blog.hefan64.tk/2023/02/28/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%9B%BD%E9%99%85%E7%89%88aapanel%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/">宝塔面板国际版aapanel安装教程</a></p><ol start="3"><li>在cloudfare上解析一个二级域名，然后按Win+R，执行cmd，在命令提示符面板里ping一下刚才解析的二级域名，如果可以ping通说明域名解析好了。</li></ol><h2 id="宝塔面板添加网站"><a href="#宝塔面板添加网站" class="headerlink" title="宝塔面板添加网站"></a>宝塔面板添加网站</h2><ol start="4"><li>打开宝塔面板——网站——添加站点——填写站点配置信息如下：</li></ol><ul><li>域名：填写刚才解析的二级域名</li><li>数据库：不创建</li><li>PHP版本：PHP-74（或者纯静态也可以）</li><li>把根目录的地址复制粘贴到记事本上，后面需要用到。</li></ul><ol start="5"><li>完成上述配置信息后点击提交，点击网站——点击刚添加的二级域名——域名管理——再次点击刚添加的二级域名——打开后如果显示“恭喜，站点创建成功”，就可以给站点配置SSL证书了。</li><li>点击网站——点击刚添加的二级域名——SSL——Let’s Encrypt——选中刚添加的二级域名——点击申请，然后宝塔面板就会自动帮我们申请SSL证书——保存——开启强制HTTPS</li></ol><h2 id="安装Alist挂载工具"><a href="#安装Alist挂载工具" class="headerlink" title="安装Alist挂载工具"></a>安装Alist挂载工具</h2><ol start="7"><li>用ssh工具连接服务器，在宝塔面板安装上Alist，安装教程是在官方给出的基础上，末尾增加指定目录进行安装，也就是在官方安装命令后添加刚才网站的根目录地址，例如：</li></ol><ul><li>安装Alist</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -fsSL &quot;https://alist.nn.ci/v3.sh&quot; | bash -s install http://43.134.16.15:5244/</span><br></pre></td></tr></table></figure><ul><li>升级Alist</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -fsSL &quot;https://alist.nn.ci/v3.sh&quot; | bash -s update http://43.134.16.15:5244/</span><br></pre></td></tr></table></figure><ul><li>卸载Alist</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -fsSL &quot;https://alist.nn.ci/v3.sh&quot; | bash -s uninstall http://43.134.16.15:5244/</span><br></pre></td></tr></table></figure><ol start="8"><li>Alist安装成功后会得到如下信息：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Alist 安装成功！</span><br><span class="line"></span><br><span class="line">访问地址：http://YOUR_IP:5244/</span><br><span class="line"></span><br><span class="line">配置文件路径：/www/wwwroot/alist.hefan64.tk/alist/data/config.json</span><br><span class="line">$查看管理员信息，请执行</span><br><span class="line">cd /www/wwwroot/alist.hefan64.tk/alist</span><br><span class="line">./alist admin</span><br><span class="line"></span><br><span class="line">查看状态：systemctl status alist</span><br><span class="line">启动服务：systemctl start alist</span><br><span class="line">重启服务：systemctl restart alist</span><br><span class="line">停止服务：systemctl stop alist</span><br></pre></td></tr></table></figure><ol start="9"><li>查看管理员信息（查看Alist的用户名和登录密码），执行下面这条命令：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /www/wwwroot/alist.hefan64.tk/alist</span><br><span class="line">./alist admin</span><br></pre></td></tr></table></figure><p>现在我们已经拥有了Alist的访问地址，以及Alist的用户名和登录密码，可以在浏览器上登录Alist挂载工具了。</p><h2 id="给Alist进行反向代理"><a href="#给Alist进行反向代理" class="headerlink" title="给Alist进行反向代理"></a>给Alist进行反向代理</h2><ol start="10"><li>打开宝塔面板——网站——点击刚才添加的二级域名——反向代理——添加反向代理，填写反向代理配置信息如下：</li></ol><ul><li>代理名称：alist （可以自定义）</li><li>目标URL：<a href="http://43.134.16.15:5244/">http://43.134.16.15:5244</a> （这里填的是Alist的访问地址）</li></ul><ol start="11"><li>完成上述配置信息后点击提交，可以通过下面两步检验反向代理是否成功</li></ol><ul><li>点击反向代理目标URL，查看是否可以正常打开</li><li>点击域名管理——再点击刚才添加的二级域名，查看是否可以正常打开</li></ul><ol start="12"><li>至此宝塔面板安装Alist挂载工具就完成了，想要深入学习请移步至<a href="https://alist.nn.ci/guide/install/script.html">官方文档</a>，Alist的GitHub的项目地址：<a href="https://github.com/alist-org/alist">https://github.com/alist-org/alist</a></li></ol><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/Alist%E6%8C%82%E8%BD%BD%E5%B7%A5%E5%85%B7.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Alist网盘挂载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WordPress搭建个人博客教程</title>
      <link href="/2023/02/28/WordPress%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
      <url>/2023/02/28/WordPress%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<ol><li>首先需要在服务器上安装宝塔面板，宝塔面板安装教程请参考下面这篇文章。</li></ol><p><a href="https://blog.hefan64.tk/2023/02/28/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%9B%BD%E9%99%85%E7%89%88aapanel%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/">宝塔面板国际版aapanel安装教程</a></p><ol start="2"><li>在cloudfare上解析一个域名，按win+R，输入cmd，然后再按Enter键，在命令提示符面板里ping一下刚才解析的域名，如果可以ping通说明域名已经解析好了。</li><li>打开宝塔面板——点击网站——添加站点，填写站点配置信息如下：</li></ol><ul><li>域名：填写刚才解析的域名</li><li>数据库：选择MySQL，数据库账号密码选择默认就可以</li><li>PHP版本：选择PHP-74</li><li>记得先把数据库的账号和密码复制保存到记事本上，后面需要用到。</li></ul><ol start="4"><li>完成上述配置后点击提交，然后打开刚添加的域名——域名管理——再次点击刚添加的域名——打开后如果显示“恭喜，站点创建成功”，就可以给站点配置SSL证书了。</li><li>点击网站——点击刚添加的域名——SSL——Let’s Encrypt——选中刚添加的域名——点击申请，然后宝塔面板就会自动帮我们申请SSL证书——保存——开启强制HTTPS。</li><li>点击网站——根目录——删除根目录下的全部文件——打开WordPress中文官网——获取WordPress——选择下载最新版的WordPress压缩包（建议选择下载tar.gz格式的压缩包）。</li><li>点击网站——根目录——上传刚才下载的WordPress压缩包——右键解压WordPress压缩包——删除WordPress压缩包——打开WordPress文件夹——把全部文件剪切到根目录下——删除WordPress空文件夹。</li><li>点击网站——点击刚添加的域名——域名管理——再次点击刚添加的域名——来到WordPress安装向导页面——点击现在就开始——填写数据库配置信息如下：</li></ol><ul><li>数据库名：填写网站的域名</li><li>用户名：复制粘贴刚才保存的数据库账号</li><li>密码：复制粘贴刚才保存的数据库密码</li></ul><p>备注：记得先打开宝塔面板——数据库查看一下是否已经创建了数据库，如果没有则先点击root密码——修改root密码，再创建一个数据库，然后再执行上述操作。</p><ol start="9"><li>完成上述配置信息后点击提交——运营安装程序——填写网站的配置信息如下：</li></ol><ul><li>站点标题：my blog （可以自定义）</li><li>用户名：my blog （可以自定义）</li><li>密码：建议设置的复杂一点（可以自定义）</li><li>您的电子邮件地址：填写自己的邮箱</li></ul><ol start="10"><li>完成上述配置信息后点击安装WordPress——跳转到WordPress登录页面，填写WordPress账号和密码就可以登录WordPress后台了——点击左上角的my blog就可以来到WordPress前台。</li><li>安装自己需要的WordPress主题和插件，至此WordPress搭建个人博客就完成了。</li></ol><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/WordPress%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2.jpg" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> WordPress </tag>
            
            <tag> 搭建博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔面板国际版aapanel安装教程</title>
      <link href="/2023/02/27/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%9B%BD%E9%99%85%E7%89%88aapanel%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2023/02/27/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%9B%BD%E9%99%85%E7%89%88aapanel%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<ol><li>首先需要准备一台服务器，我这里使用的是腾讯轻量云服务器，安装的镜像是Debian 11，然后把无服务连接到ssh工具上，我这里使用的ssh工具是WindTerm，这是一款GitHub上的免费开源软件，下载地址如下：<a href="https://github.com/kingToolbox/WindTerm">https://github.com/kingToolbox/WindTerm</a></li><li>更新Debian系统和安装组件</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt install -y curl &amp;&amp; apt install -y socat &amp;&amp; apt install wget -y</span><br></pre></td></tr></table></figure><ol start="2"><li>安装bbr加速</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate &quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><p>如果已经安装了bbr加速，选择4开启bbr加速。</p><ol start="4"><li>安装宝塔面板国际版aapanel</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh &amp;&amp; bash install.sh aapanel</span><br></pre></td></tr></table></figure><p>安装完成之后把aapanel的登录地址、登录账号和登录密码保存到记事本上。</p><ol start="5"><li>登录aapanel面板</li></ol><p>在浏览器打开aapanel的外连接地址，输入账号和密码进行登录。</p><ol start="6"><li>安装搭建博客需要的宝塔组件</li></ol><p>Nginx 1.21、     MySQL 5.7、     PHP 7.4、     phpMyAdmin 5.0</p><ol start="7"><li>给宝塔面板添加SSL证书，开启https请参考下面这篇文章。</li></ol><p><a href="https://www.bt.cn/bbs/thread-105443-1-1.html">【教程贴】如何开启面板SSL并设置浏览器信任自签证书</a></p><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 宝塔面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何通过优选IP提升VPS上网速度</title>
      <link href="/2023/02/24/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E4%BC%98%E9%80%89IP%E6%8F%90%E5%8D%87VPS%E4%B8%8A%E7%BD%91%E9%80%9F%E5%BA%A6/"/>
      <url>/2023/02/24/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E4%BC%98%E9%80%89IP%E6%8F%90%E5%8D%87VPS%E4%B8%8A%E7%BD%91%E9%80%9F%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>默认：已经搭建好了xui面板和在cloudfare上解析好了域名（打开小云朵就是套了CDN）。</p></blockquote><ol><li>下载安装优选IP工具CloudflareSpeedTest。</li></ol><p><a href="https://github.com/XIU2/CloudflareSpeedTest">https://github.com/XIU2/CloudflareSpeedTest</a></p><ol start="2"><li>解压SpeedTest压缩包，进入到CloudflareST.exe目录，在空白处鼠标右键——在终端中打开。</li><li>在Windows PowerShell命令行中输入以下命令，再按Enter键确认。</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.\CloudflareST.exe</span><br></pre></td></tr></table></figure><ol start="4"><li>然后就会自动进行测速，最终会优选出10个ping值比较低，网速比较快的ip。</li><li>如果对优选结果不满意（优选IP时需要关闭代理工具），可以自己定义优选规则，执行以下命令，调出帮助文档。</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.\CloudflareST.exe -help</span><br></pre></td></tr></table></figure><ol start="6"><li>自定义下载速度下限和平均延迟上限，然后再进行测速，执行以下命令。</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.\CloudflareST.exe -sl 5 -tl 200</span><br></pre></td></tr></table></figure><ol start="7"><li>打开并登录xui面板，创建节点，注意：协议选择vless或者vmess，端口选择Cloudflare支持的https的端口，例如：443、2053、2083、2087、2096、8443，传输选择ws。</li><li>把创建的节点导入到v2rayN代理软件中，首先对节点进行测速，随后双击节点信息，在地址栏填写刚才优选出来的ip，在伪装域名栏填写在Cloudfare上解析好的域名，然后点击确定，最后再对已更换优选ip后的节点测速。</li></ol><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/%E4%BC%98%E9%80%89IP.jpeg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 优选IP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian系统防火墙设置常用命令</title>
      <link href="/2023/02/23/Debian%E7%B3%BB%E7%BB%9F%E9%98%B2%E7%81%AB%E5%A2%99%E8%AE%BE%E7%BD%AE%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/02/23/Debian%E7%B3%BB%E7%BB%9F%E9%98%B2%E7%81%AB%E5%A2%99%E8%AE%BE%E7%BD%AE%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="安装防火墙"><a href="#安装防火墙" class="headerlink" title="安装防火墙"></a>安装防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install ufw</span><br></pre></td></tr></table></figure><h2 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ufw status     #方法一</span><br><span class="line">ufw status verbose     #方法二</span><br></pre></td></tr></table></figure><h2 id="开启防火墙"><a href="#开启防火墙" class="headerlink" title="开启防火墙"></a>开启防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ufw enable</span><br></pre></td></tr></table></figure><h2 id="放行指定端口"><a href="#放行指定端口" class="headerlink" title="放行指定端口"></a>放行指定端口</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ufw allow 端口号/tcp     #可以选择放行tcp或者udp端口</span><br><span class="line">ufw allow 端口号     #同时放行tcp和udp端口   </span><br></pre></td></tr></table></figure><h2 id="关闭指定端口"><a href="#关闭指定端口" class="headerlink" title="关闭指定端口"></a>关闭指定端口</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ufw delete allow 端口号</span><br></pre></td></tr></table></figure><h2 id="重启防火墙"><a href="#重启防火墙" class="headerlink" title="重启防火墙"></a>重启防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ufw reload</span><br></pre></td></tr></table></figure><h2 id="查看防火墙现有规则"><a href="#查看防火墙现有规则" class="headerlink" title="查看防火墙现有规则"></a>查看防火墙现有规则</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ufw show added     #方法一</span><br><span class="line">ufw status numbered     #方法二</span><br></pre></td></tr></table></figure><h2 id="查看所有端口号"><a href="#查看所有端口号" class="headerlink" title="查看所有端口号"></a>查看所有端口号</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -ntlp     #此命令如果无法运行请先安装：apt-get install net-tools -y</span><br></pre></td></tr></table></figure><h2 id="查看指定端口是否被占用"><a href="#查看指定端口是否被占用" class="headerlink" title="查看指定端口是否被占用"></a>查看指定端口是否被占用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsof -i tcp:1537     #查看所有1537端口使用情况</span><br><span class="line">netstat -ntulp |grep 1537     #查看所有1537端口使用情况，此命令也可以查出占用端口的进程</span><br></pre></td></tr></table></figure><h2 id="查看-amp-关闭占用进程"><a href="#查看-amp-关闭占用进程" class="headerlink" title="查看&amp;关闭占用进程"></a>查看&amp;关闭占用进程</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kill -9 PID</span><br></pre></td></tr></table></figure><h2 id="禁止开机启动"><a href="#禁止开机启动" class="headerlink" title="禁止开机启动"></a>禁止开机启动</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ufw disable</span><br></pre></td></tr></table></figure><h2 id="开启开机启动"><a href="#开启开机启动" class="headerlink" title="开启开机启动"></a>开启开机启动</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ufw enable</span><br></pre></td></tr></table></figure><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ufw disable</span><br></pre></td></tr></table></figure><h2 id="重置防火墙"><a href="#重置防火墙" class="headerlink" title="重置防火墙"></a>重置防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ufw reset</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/%E9%98%B2%E7%81%AB%E5%A2%99ufw.jpeg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 防火墙设置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Freenom的免费域名托管到Cloudfare上</title>
      <link href="/2023/02/20/Freenom%E7%9A%84%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudfare%E4%B8%8A/"/>
      <url>/2023/02/20/Freenom%E7%9A%84%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudfare%E4%B8%8A/</url>
      
        <content type="html"><![CDATA[<p>1、首先打开Freenom官网，点击Services——My Domains——Manage Domain——Management Tools——Nameservers——选择Use custom nameservers (enter below)。</p><p>2、打开Cloudfare官网——在搜索框输入需要托管的域名——分别复制Nameserver 1和Nameserver 2的链接，粘贴到Freenom的Nameserver 1和Nameserver 2位置，点击change Nameserver。</p><p>3、切换回到Cloudfare页面，点击完成——再点击快速入门指南——点击开始使用——连续点击4次保存——最后点击完成。</p><p>4、完成上述操作，我们就成功把域名托管到Cloudfare上了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Cloudfare </tag>
            
            <tag> 域名托管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Freenom域名即将到期免费续签的方法</title>
      <link href="/2023/02/20/Freenom%E5%9F%9F%E5%90%8D%E5%8D%B3%E5%B0%86%E5%88%B0%E6%9C%9F%E5%85%8D%E8%B4%B9%E7%BB%AD%E7%AD%BE%E7%9A%84%E6%96%B9%E6%B3%95/"/>
      <url>/2023/02/20/Freenom%E5%9F%9F%E5%90%8D%E5%8D%B3%E5%B0%86%E5%88%B0%E6%9C%9F%E5%85%8D%E8%B4%B9%E7%BB%AD%E7%AD%BE%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<ol><li>打开<a href="https://my.freenom.com/">Freenom官网</a>——点击Service——Renew Domains</li><li>找到即将到期的域名（免费域名的最低提前续订时间为14天），点击Renew This Domain，选择续签时长12 Months @ FREE，再点击现在下单Order Now。</li><li>完成上述操作，看到过期时间已经变更，这样就完成了Freenom免费域名的续签。</li></ol><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/freenom-logo.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> freenom </tag>
            
            <tag> 免费域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用VS Code写文章非常方便且高效</title>
      <link href="/2023/02/16/%E4%BD%BF%E7%94%A8VS%20Code%E5%86%99%E6%96%87%E7%AB%A0%E9%9D%9E%E5%B8%B8%E6%96%B9%E4%BE%BF%E4%B8%94%E9%AB%98%E6%95%88/"/>
      <url>/2023/02/16/%E4%BD%BF%E7%94%A8VS%20Code%E5%86%99%E6%96%87%E7%AB%A0%E9%9D%9E%E5%B8%B8%E6%96%B9%E4%BE%BF%E4%B8%94%E9%AB%98%E6%95%88/</url>
      
        <content type="html"><![CDATA[<h2 id="VS-Code简介"><a href="#VS-Code简介" class="headerlink" title="VS Code简介"></a>VS Code简介</h2><p>VS Code是微软2015年推出的一款跨平台源代码编辑器，可以在Windows、macOS、Linux上使用。VS Code除了编写代码，还能用来写文章，只需要在上面安装一个typora插件，就可以使用Markdown语法写文章，该插件可以对Markdown语法进行实时渲染，及所见就是所得。</p><h2 id="VS-Code支持的语音"><a href="#VS-Code支持的语音" class="headerlink" title="VS Code支持的语音"></a>VS Code支持的语音</h2><p>用户可以更改自己喜欢的主题和自定义快捷方式，内置的扩展商店拥有丰富的插件。该编辑器支持的功能包括语法高亮、括号补全、代码折叠和代码片段，VS Code支持多种语言和文件格式的编写，例如：HandleBars、Markdown、Python、Java、PHP、Haxe、Ruby、Sass、Rust、PowerShell、Groovy、R、Makefile、HTML、JSON、TypeScript、Batch、Visual Basic、Swift、Less、SQL、XML、Lua、Go、C++、Ini、Razor、Clojure、C#、Objective-C、CSS、JavaScript、Perl、Coffee Script、Dockerfile、Dart。</p><h2 id="VS-Code安装教程"><a href="#VS-Code安装教程" class="headerlink" title="VS Code安装教程"></a>VS Code安装教程</h2><p>在浏览器搜索<a href="https://code.visualstudio.com/">VS Code官网</a>，进入官网首页下载对应系统的软件（支持Windows、macOS、Linux）。VS Code安装非常简单，双击下载好的安装包，按提示下一步，下一步，下一步操作就可以。</p><p>双击打开VS Code桌面快捷方式，点击扩展商店图标，在搜索框里输入Chinese，然后点击Install安装Chinese (Simplified)插件就可以，再点击【restart】按钮重新启动编辑器就完成汉化了。</p><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/VS%20Code.jpeg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> VS Code </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>360安全卫士关闭弹窗广告设置大全</title>
      <link href="/2023/02/16/360%E5%AE%89%E5%85%A8%E5%8D%AB%E5%A3%AB%E5%85%B3%E9%97%AD%E5%BC%B9%E7%AA%97%E5%B9%BF%E5%91%8A%E8%AE%BE%E7%BD%AE%E5%A4%A7%E5%85%A8/"/>
      <url>/2023/02/16/360%E5%AE%89%E5%85%A8%E5%8D%AB%E5%A3%AB%E5%85%B3%E9%97%AD%E5%BC%B9%E7%AA%97%E5%B9%BF%E5%91%8A%E8%AE%BE%E7%BD%AE%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<p>1、打开360安全卫士——设置——基本设置——功能定制——取消显示首页安全播报、取消首页主界面搜索框。</p><p>2、基本设置——提醒设置——取消开启软件管家升级提醒。</p><p>3、基本设置——系统右键菜单——取消把使用360进行木马云查杀添加到鼠标右键菜单、取消把使用360管理右键菜单添加到鼠标右键菜单、取消把深度清理垃圾添加到鼠标右键菜单、取消把开启360桌面助手添加到桌面右键菜单。</p><p>4、基本设置——用户体验改善计划——取消参加360用户体验改善计划。</p><p>5、弹窗设置——用户账号及任务——取消完成任务时提示获取到的经验值、取消账号自动登录后提示、取消账号等级升级时提示、取消有新特权时提示。</p><p>6、弹窗设置——垃圾清理提升——把垃圾提醒标准设置为1GB——把提醒清理频率设置为每周。</p><p>7、弹窗设置——场景感知推荐提醒——取消开启场景感知推荐提醒。</p><p>8、弹窗设置——产品推荐提醒——取消开启推荐提醒。</p><p>9、弹窗设置——焦点资讯提醒——取消开启焦点资讯提醒。</p><p>10、弹窗设置——每日趣玩提醒——取消开启每日趣玩。</p><p>11、弹窗设置——长期未关机提醒——取消开启未关机提醒。</p><p>12、弹窗设置——自动追剧提醒——取消开启自动追剧提醒。</p><p>13、弹窗设置——青少年保护模式——选择不自动进入青少年保护模式。</p><p>14、弹窗设置——游戏优化结果提醒——取消开启游戏优化结果提醒。</p><p>15、弹窗设置——今日精选提醒——取消今日精选提醒。</p><p>16、弹窗设置——每日热点——取消开启每日热点。</p><p>17、开机小助手——取消显示不定期开机推广、取消智能等待、取消显示焦点资讯、取消我愿意加入360开机时间调查。</p><p>18、木马查杀——取消开启内容推荐提示——完成设置后点击确定。</p><p>19、重启电脑会在右下角弹出360开机助手——点击弹窗上的设置——取消优先用360浏览器开新闻——再点击默认选项——把设置小助手停留时间设为5秒——然后点击保存。</p><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/360%E5%AE%89%E5%85%A8%E5%8D%AB%E5%A3%AB.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 关闭弹窗广告 </tag>
            
            <tag> 360安全卫士 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建个人博客详细教程【GitHub pages】</title>
      <link href="/2023/02/15/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%E3%80%90GitHub%20pages%E3%80%91/"/>
      <url>/2023/02/15/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%E3%80%90GitHub%20pages%E3%80%91/</url>
      
        <content type="html"><![CDATA[<h2 id="前期准备工作"><a href="#前期准备工作" class="headerlink" title="前期准备工作"></a>前期准备工作</h2><ol><li><p>安装Node.js  官网下载地址：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p></li><li><p>安装Git工具  官网下载地址：<a href="https://git-scm.com/">https://git-scm.com/</a></p><p>Node.js和Git的安装都非常简单，按提示进行下一步操作，默认安装就可以。</p></li><li><p>按Win+R键，输入cmd，然后再按Enter键。检查Node.js是否安装成功，执行命令</p></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>如果可以查看到版本号，说明Node.js安装成功了。</p><ol start="4"><li>检查Node.js下的npm是否安装成功，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>如果可以查看到版本号，说明npm也安装成功了。</p><ol start="5"><li>检查Git是否安装成功，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>如果可以查看到版本号，说明Git也安装成功了。</p><h2 id="搭建hexo本地博客"><a href="#搭建hexo本地博客" class="headerlink" title="搭建hexo本地博客"></a>搭建hexo本地博客</h2><ol start="6"><li>在D盘新建一个Hexo文件夹，在Hexo文件夹下再新建一个blog文件夹，然后在blog文件夹中右键Git Bash Here，可以选择先安装淘宝镜像加速器，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><ol start="7"><li>安装Hexo博客框架，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>检查Hexo是否安装成功，执行命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>如果可以查看到版本号，说明Hexo也安装成功了。</p><ol start="8"><li>初始化Hexo博客，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><ol start="9"><li>生成静态文件，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><ol start="10"><li>启动本地web服务，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>在浏览器打开生成的本地博客地址：<a href="http://localhost:4000/">http://localhost:4000</a> ，能正常的打开的话就可以开始准备部署到GitHub上了。</p><h2 id="部署到GitHub仓库"><a href="#部署到GitHub仓库" class="headerlink" title="部署到GitHub仓库"></a>部署到GitHub仓库</h2><ol start="11"><li>打开GitHub，新建一个GitHub仓库，注意仓库名称必须是自己的GitHub用户名.github.io 的形式，例如：xiaotian.github.io  ，点击右侧的code——选择HTTPS——在这里可以复制仓库的地址</li><li>生成ssh公钥，然后添加到GitHub ，在本地的blog文件夹中右键Git Bash Here ，分别执行下面这个三条命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;     #yourname是GitHub的用户名</span><br><span class="line">git config --global user.email &quot;youremail&quot;     #yourmail是GitHub绑定的邮箱</span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;     #这一步是生成秘钥和公钥文件</span><br></pre></td></tr></table></figure><p>然后到对应的文件夹下去找公钥文件，windows一般是在C盘——用户——Administrator——.ssh文件夹下生成的。然后用vs code打开id_rsa.pub公钥——全选进行复制——打开GitHub——setting——SH and GPG keys——new SSH keys——粘贴刚才复制过来的公钥，然后保存。</p><ol start="13"><li>打开本地的Hexo文件夹——blog——双击打开config.yml文件，用vs code编辑器打开config.yml文件，在底部添加如下配置信息，然后保存。</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/hefanx/hefanx.github.io.git     # https://是你的仓库地址</span><br><span class="line">  branch: main     #绑定的仓库分支，默认是main</span><br></pre></td></tr></table></figure><ol start="14"><li>回到根目录blog文件夹下载，右键Git Bash Here ，安转Git部署插件，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ol start="15"><li>然后分别执行下面这三条命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean     #清除缓存文件db.json和已生成的静态文件</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g     #生成网站静态文件到默认设置的public文件夹里，是hexo generate的缩写</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d     #自动生成网站静态文件，并部署到GitHub仓库，是hexo deploy的缩写</span><br></pre></td></tr></table></figure><p>如果是第一次连接GitHub仓库，会提示让你输入GitHub的用户名和密码。</p><ol start="16"><li>现在就可以打开网页端的GitHub仓库查看刚才上传的代码文件了，在浏览器打开xiaotiao.github.io就能访问刚才搭建的hexo博客。</li></ol><h2 id="写博客和更改主题"><a href="#写博客和更改主题" class="headerlink" title="写博客和更改主题"></a>写博客和更改主题</h2><ol start="17"><li>打开本地的Hexo文件夹——blog——source——posts——右键Git Bash Here，新建一篇文章，执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new test     #test就是你的文章标题  </span><br></pre></td></tr></table></figure><p>建议使用Typora或者vs code来写Markdown文章。</p><p>18.首先前往GitHub下载<a href="https://github.com/jerryc127/hexo-theme-butterfly">butterfly主题</a>，可以直接下载压缩包或者是通过命令行的方式下载</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>解压butterfly主题压缩包，然后把解压后的butterfly主题文件复制到themes文件夹下，再把butterfly主题的文件夹名称修改成butterfly。打开根目录下的打开config.yml文件，然后把theme: landscape修改成theme: butterfly，修改好后保存就可以。</p><ol start="19"><li>博客内容修改好后想要推送到GitHub，分别执行以下四条命令，在blog根目录下右键Git Bash Here，然后执行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git cl     #清除缓存文件db.json和已生成的静态文件，是hexo clean的缩写</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git g     #生成网站静态文件到默认设置的public文件夹里，是hexo generate的缩写</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git s     #启动本地预览服务，访问网址：http://localhost:4000/ ，是hexo server的缩写</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git d     #自动生成网站静态文件，并部署到GitHub仓库，是hexo deploy的缩写</span><br></pre></td></tr></table></figure><p>至此Hexo个人博客就搭建完成了。</p><p>补充扩展：</p><p>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s     作用：清理缓存 + 生成静态页面 + 在本地预览。</p><p>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d     作用：清理缓存 + 生成静态页面 + 推送部署到云端。</p><p><img src="https://cdn.staticaly.com/gh/hefanx/blog-tuchuang@master/img/hexo-logo.jpeg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
